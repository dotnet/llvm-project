<Project>
  <Import Project="Directory.Build.props" />
  <Import Project="Directory.Build.targets" />

  <PropertyGroup>
    <_LLVMSourceDir Condition="'$(_LLVMBuildDir)'==''">$(MSBuildProjectDirectory)/llvm</_LLVMSourceDir>
    <_LLVMBuildDir Condition="'$(_LLVMBuildDir)'==''">$(MSBuildProjectDirectory)/artifacts/tmp/BuildRoot</_LLVMBuildDir>
    <_LLVMInstallDir Condition="'$(_LLVMInstallDir)'==''">$(MSBuildProjectDirectory)/artifacts/tmp/InstallRoot</_LLVMInstallDir>
  </PropertyGroup>

  <Target Name="_LLVMBeforeBuild">
    <MakeDir Directories="$(_LLVMBuildDir)" Condition="!Exists('$(_LLVMBuildDir)')" />
  </Target>

  <Target Name="_LLVMAfterBuild">
    <RemoveDir Directories="$(_LLVMInstallDir)/share" />
    <ItemGroup>
      <FilesToDelete Include="$(_LLVMInstallDir)/lib/libLTO*" />
      <FilesToDelete Include="$(_LLVMInstallDir)/lib/BugpointPasses.*" />
    </ItemGroup>
    <Delete Files="@(FilesToDelete)" ContinueOnError="true" TreatErrorsAsWarnings="true" />
  </Target>

  <Target Name="_LLVMBuildWindows" Condition="'$(OS)' == 'Windows_NT'">
    <Exec WorkingDirectory="$(_LLVMBuildDir)"
          Command="$(_LLVMSourceDir)/scripts/ci/run-jenkins-windows.bat &quot;$(_LLVMSourceDir)&quot; &quot;$(_LLVMBuildDir)&quot; &quot;$(_LLVMInstallDir)&quot;"
          IgnoreStandardErrorWarningFormat="true" />
  </Target>

  <Target Name="_LLVMBuildNoneWindows" Condition="'$(OS)' != 'Windows_NT'">
    <ItemGroup>
      <_LLLVMBuildArgs Include="-DCMAKE_BUILD_TYPE=Release" />
      <_LLLVMBuildArgs Include="-DLLVM_INCLUDE_TESTS:BOOL=OFF" />
      <_LLLVMBuildArgs Include='-DCMAKE_C_FLAGS="-I../llvm/include -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DNDEBUG -D__NO_CTYPE_INLINE -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS"' />
      <_LLLVMBuildArgs Include='-DCMAKE_CXX_FLAGS="-I../llvm/include -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -DNDEBUG -D__NO_CTYPE_INLINE -D_GNU_SOURCE -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS"' />
      <_LLLVMBuildArgs Include='-DLLVM_TARGETS_TO_BUILD="X86%3BAArch64%3BARM"' />
    </ItemGroup>

    <Exec WorkingDirectory="$(_LLVMBuildDir)"
          Command="cmake $(_LLVMSourceDir) @(_LLLVMBuildArgs->'%(Identity)',' ')"
          Condition="!Exists('$(_LLVMBuildDir)/CMakeCache.txt')"
          IgnoreStandardErrorWarningFormat="true" />
    <Exec WorkingDirectory="$(_LLVMBuildDir)"
          Command="make all -j8"
          IgnoreStandardErrorWarningFormat="true"  />
    <Exec WorkingDirectory="$(_LLVMBuildDir)"
          Command="cmake -DCMAKE_INSTALL_PREFIX=$(_LLVMInstallDir) -P cmake_install.cmake" />
  </Target>

  <Target Name="Build" DependsOnTargets="_LLVMBeforeBuild;_LLVMBuildWindows;_LLVMBuildNoneWindows;_LLVMAfterBuild" />
  <Target Name="Restore" />
  <Target Name="Test" />
  <Target Name="Pack" DependsOnTargets="Build">
    <MSBuild Projects="nuget/packages.builds" Targets="Build" />
  </Target>
</Project>


trigger:
  batch: true
  branches:
    include:
    - objwriter/*

pr:
  branches:
    include:
    - objwriter/*

variables:
- template: /eng/common-variables.yml

stages:
- stage: build
  displayName: Build
  jobs:
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      enablePublishBuildArtifacts: true
      enablePublishBuildAssets: true
      enablePublishUsingPipelines: true
      variables:
        - _BuildConfig: Release
      jobs:

      ############ LINUX BUILD ############
      - job: Build_Linux
        displayName: Linux
        timeoutInMinutes: 120
        strategy:
          matrix:
            x64:
              assetManifestOS: linux
              assetManifestPlatform: x64
              imagename: mcr.microsoft.com/dotnet-buildtools/prereqs:centos-7-20210714125435-9b5bbc2
              rootfs: 
              clangtarget: 
              archflag: --arch x64
              LLVMTableGenArg: 
            arm64:
              assetManifestOS: linux
              assetManifestPlatform: arm64
              imagename: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-cfdd435-20200121150126
              rootfs: /crossrootfs/arm64
              clangtarget: aarch64-linux-gnu
              archflag: --arch arm64
              LLVMTableGenArg: /p:LLVMTableGenPath=$(Build.SourcesDirectory)/artifacts/obj/BuildRoot-x64/bin/llvm-tblgen
            arm:
              assetManifestOS: linux
              assetManifestPlatform: arm
              imagename: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-09ec757-20200320131433
              rootfs: /crossrootfs/arm
              clangtarget: arm-linux-gnueabihf
              archflag: --arch arm
              LLVMTableGenArg: /p:LLVMTableGenPath=$(Build.SourcesDirectory)/artifacts/obj/BuildRoot-x64/bin/llvm-tblgen
        pool:
          ${{ if eq(variables['System.TeamProject'], 'public') }}:
            vmImage: ubuntu-20.04
          ${{ if eq(variables['System.TeamProject'], 'internal') }}:
            name: NetCore1ESPool-Internal
            demands: ImageOverride -equals Build.Ubuntu.1804.Amd64
        container:
          image: $(imagename)
        steps:
        - bash: |
            set -ex
            git clean -ffdx
            git reset --hard HEAD
          displayName: 'Clean up working directory'

        - bash: |
            ./build.sh --ci --restore --build --arch x64 -configuration $(_BuildConfig) $(_InternalBuildArgs) /p:BuildLLVMTableGenOnly=true
          displayName: 'Build host llvm-tblgen for cross-compiling'
          condition: and(succeeded(), ne(variables['assetManifestPlatform'], 'x64'))

        - bash: |
            ./build.sh --ci --restore --build --pack $(archflag) --configuration $(_BuildConfig) $(_InternalBuildArgs) $(LLVMTableGenArg)
          displayName: 'Build and package'
          env:
            ROOTFS_DIR: $(rootfs)
            CLANG_TARGET: $(clangtarget)

        - bash: |
            ./eng/common/build.sh --ci --restore --publish --configuration $(_BuildConfig) $(_InternalBuildArgs) /p:AssetManifestOS=$(assetManifestOS) /p:PlatformName=$(assetManifestPlatform) --projects $(Build.SourcesDirectory)/llvm.proj
          displayName: Publish packages
          condition: and(succeeded(), ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest'))

      ############ LINUX MUSL BUILD ############
      - job: Build_Linux_musl
        displayName: Linux_musl
        timeoutInMinutes: 120
        strategy:
          matrix:
            x64:
              assetManifestOS: linux-musl
              assetManifestPlatform: x64
              imagename: mcr.microsoft.com/dotnet-buildtools/prereqs:alpine-3.13-WithNode-20210910135845-c401c85
              rootfs: 
              clangtarget: 
              archflag: --arch x64
              LLVMTableGenArg: 
            arm64:
              assetManifestOS: linux-musl
              assetManifestPlatform: arm64
              imagename: mcr.microsoft.com/dotnet-buildtools/prereqs:ubuntu-16.04-cross-arm64-alpine-20210923140502-78f7860
              rootfs: /crossrootfs/arm64
              clangtarget: aarch64-alpine-linux-musl
              archflag: --arch arm64
              LLVMTableGenArg: /p:LLVMTableGenPath=$(Build.SourcesDirectory)/artifacts/obj/BuildRoot-x64/bin/llvm-tblgen
        pool:
          ${{ if eq(variables['System.TeamProject'], 'public') }}:
            vmImage: ubuntu-20.04
          ${{ if eq(variables['System.TeamProject'], 'internal') }}:
            name: NetCore1ESPool-Internal
            demands: ImageOverride -equals Build.Ubuntu.1804.Amd64
        container:
          image: $(imagename)
        steps:
        - bash: |
            set -ex
            git clean -ffdx
            git reset --hard HEAD
          displayName: 'Clean up working directory'

        - bash: |
            ./build.sh --ci --restore --build --arch x64 -configuration $(_BuildConfig) $(_InternalBuildArgs) /p:BuildLLVMTableGenOnly=true
          displayName: 'Build host llvm-tblgen for cross-compiling'
          condition: and(succeeded(), ne(variables['assetManifestPlatform'], 'x64'))

        - bash: |
            ./build.sh --ci --restore --build --pack $(archflag) --configuration $(_BuildConfig) $(_InternalBuildArgs) $(LLVMTableGenArg) /p:OutputRid=linux-musl-$(assetManifestPlatform)
          displayName: 'Build and package'
          env:
            ROOTFS_DIR: $(rootfs)
            CLANG_TARGET: $(clangtarget)

        - bash: |
            ./eng/common/build.sh --ci --restore --publish --configuration $(_BuildConfig) $(_InternalBuildArgs) /p:AssetManifestOS=$(assetManifestOS) /p:PlatformName=$(assetManifestPlatform) --projects $(Build.SourcesDirectory)/llvm.proj
          displayName: Publish packages
          condition: and(succeeded(), ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest'))

      ############ MACOS BUILD ############
      - job: Build_macOS
        displayName: macOS
        timeoutInMinutes: 120
        strategy:
          matrix:
            x64:
              assetManifestOS: osx
              assetManifestPlatform: x64
              archflag: --arch x64
              LLVMTableGenArg: 
            arm64:
              assetManifestOS: osx
              assetManifestPlatform: arm64
              archflag: --arch arm64
              LLVMTableGenArg: /p:LLVMTableGenPath=$(Build.SourcesDirectory)/artifacts/obj/BuildRoot-x64/bin/llvm-tblgen
        pool:
          vmImage: macOS-10.15
        steps:
        - bash: |
            set -ex
            git clean -ffdx
            git reset --hard HEAD
          displayName: 'Clean up working directory'

        - bash: |
            ./build.sh --ci --restore --build --arch x64 -configuration $(_BuildConfig) $(_InternalBuildArgs) /p:BuildLLVMTableGenOnly=true
          displayName: 'Build host llvm-tblgen for cross-compiling'
          condition: and(succeeded(), ne(variables['assetManifestPlatform'], 'x64'))

        - bash: |
            ./build.sh --ci --restore --build --pack $(archflag) --configuration $(_BuildConfig) $(_InternalBuildArgs) $(LLVMTableGenArg)
          displayName: 'Build and package'

        - bash: 
            ./eng/common/build.sh --ci --restore --publish --configuration $(_BuildConfig) $(_InternalBuildArgs) /p:AssetManifestOS=$(assetManifestOS) /p:PlatformName=$(assetManifestPlatform) --projects $(Build.SourcesDirectory)/llvm.proj
          displayName: Publish packages
          condition: and(succeeded(), ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest'))

      ############ WINDOWS BUILD ############
      - job: Build_Windows
        displayName: Windows
        timeoutInMinutes: 140
        strategy:
          matrix:
            x64:
              assetManifestOS: win
              assetManifestPlatform: x64
              archflag: -arch x64
              LLVMTableGenArg:
            arm64:
              assetManifestOS: win
              assetManifestPlatform: arm64
              archflag: -arch arm64
              LLVMTableGenArg: /p:LLVMTableGenPath=$(Build.SourcesDirectory)\artifacts\obj\BuildRoot-x64\bin\llvm-tblgen.exe
        pool:
          ${{ if eq(variables['System.TeamProject'], 'public') }}:
            name: NetCore-Public
            demands: windows.vs2022.amd64.open
          ${{ if eq(variables['System.TeamProject'], 'internal') }}:
            name: NetCore1ESPool-Internal
            demands: windows.vs2022.amd64
        steps:
        - script: |
            git clean -ffdx
            git reset --hard HEAD
          displayName: 'Clean up working directory'

        - powershell: eng\build.ps1 -ci -restore -build -arch x64 -configuration $(_BuildConfig) $(_InternalBuildArgs) /p:BuildLLVMTableGenOnly=true
          displayName: 'Build host llvm-tblgen for cross-compiling'
          condition: and(succeeded(), ne(variables['assetManifestPlatform'], 'x64'))

        - powershell: eng\build.ps1 -ci -restore -build -pack $(archflag) -configuration $(_BuildConfig) $(_InternalBuildArgs) $(LLVMTableGenArg)
          displayName: 'Build and package'

        - powershell: eng\common\build.ps1 -ci -restore -publish -configuration $(_BuildConfig) $(_InternalBuildArgs) /p:AssetManifestOS=$(assetManifestOS) /p:PlatformName=$(assetManifestPlatform) -projects $(Build.SourcesDirectory)\llvm.proj
          displayName: Publish packages
          condition: and(succeeded(), ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest'))

############ POST BUILD ARCADE LOGIC ############
- ${{ if and(ne(variables['System.TeamProject'], 'public'), ne(variables['Build.Reason'], 'PullRequest')) }}:
  - template: /eng/common/templates/post-build/post-build.yml
    parameters:
      publishingInfraVersion: 3
      enableSourceLinkValidation: false
      enableSigningValidation: false
      enableSymbolValidation: false
      enableNugetValidation: true
